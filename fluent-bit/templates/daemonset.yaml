apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.daemonset.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    k8s-app: {{ .Values.labels.app_name }}
    version: {{ .Values.labels.version }}
    kubernetes.io/cluster-service: "{{ .Values.labels.cluster_svc }}"
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Values.labels.app_name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.labels.app_name }}
        version: {{ .Values.labels.version }}
        kubernetes.io/cluster-service: "{{ .Values.labels.cluster_svc }}"
    spec:
      priorityClassName: system-node-critical
      containers:
      - name: {{ .Values.daemonset.name }}
        image:  {{ .Values.daemonset.image }}
        imagePullPolicy: Always
        env:
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.fbinfo.name }}
                  key: logs.region
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.fbinfo.name }}
                  key: cluster.name
            - name: HTTP_SERVER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.fbinfo.name }}
                  key: http.server
            - name: HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.fbinfo.name }}
                  key: http.port
            - name: READ_FROM_HEAD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.fbinfo.name }}
                  key: read.head
            - name: READ_FROM_TAIL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.fbinfo.name }}
                  key: read.tail
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CI_VERSION
              value: "k8s/1.3.8"
        resources:
            limits:
              memory: {{ .Values.daemonset.memory_limit }}
            requests:
              cpu: {{ .Values.daemonset.cpu }}
              memory: {{ .Values.daemonset.memory_request }}
        volumeMounts:
        # Please don't change below read-only permissions
        - name: fluentbitstate
          mountPath: /var/fluent-bit/state
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
        - name: runlogjournal
          mountPath: /run/log/journal
          readOnly: true
        - name: dmesg
          mountPath: /var/log/dmesg
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: fluentbitstate
        hostPath:
          path: /var/fluent-bit/state
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: {{ .Values.configmap.fbconfig.name }}
      - name: runlogjournal
        hostPath:
          path: /run/log/journal
      - name: dmesg
        hostPath:
          path: /var/log/dmesg
      serviceAccountName: {{ .Values.serviceaccount.name }}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"